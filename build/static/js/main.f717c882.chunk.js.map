{"version":3,"sources":["apis/blogApi.js","components/TitleList.js","actions/index.js","components/CommentCreate.js","components/CommentBox.js","components/SocialButton.js","components/PostList.js","components/PostDetail.js","components/user/LoginNotification.js","components/articles/ArticleCreate.js","components/Header.js","components/user/Login.js","components/App.js","reducers/index.js","reducers/postReducer.js","reducers/postsReducer.js","reducers/titlesReducer.js","index.js"],"names":["axios","create","baseURL","TitleList","helperUrl","id","this","props","fetchTitles","titles","map","title","className","to","created_at","renderList","React","Component","connect","state","dispatch","a","blogApi","get","response","type","payload","data","CommentCreate","name","body","errors","Nocheck_n","Nocheck_b","handleChange","event","preventDefault","target","value","length","setState","console","log","onFormSubmit","post","article","articleId","window","location","reload","buttonPressSubmit","checkSubmit","opacity","onSubmit","onChange","onClick","style","CommentBox","comments","getComments","comment","key","SocialButton","class","data-tooltip","data-inverted","e","open","PostList","buttonPressNext","posts","next","query","match","fetchPosts","scrollTo","checkNext","cursor","marked","setOptions","highlight","code","lang","hljs","highlightAuto","undefined","results","dangerouslySetInnerHTML","__html","PostDetail","fetchPost","params","LoginNotification","func","toast","info","loginCheck","ACCESSTOKEN","localStorage","getItem","token","status","warn","success","error","nextProps","nextState","propsDiff","_","isEqual","stateDiff","addNotification","ArticleCreate","markdown","headers","Authorization","assign","Header","Login","password","username","setItem","access","userid","App","path","exact","component","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f717c882.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://thiele.work/api/v1'\r\n    //baseURL: 'http://127.0.0.1:8000/api/v1'\r\n});","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport { fetchTitles } from '../actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass TitleList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchTitles();\r\n    };\r\n\r\n    helperUrl = id => {\r\n        return `/articles/${id}`;\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.titles.map(title => {\r\n            return (\r\n                <div className=\"item\">\r\n                    <i className=\"large angle double right icon\"></i>\r\n                    <div className=\"content\">\r\n                        <Link to={`/articles/${title.id}`} className=\"header\">\r\n                            {title.title}\r\n                        </Link>\r\n                        <div className=\"description\">{title.created_at}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui relaxed divided list\">\r\n                {this.renderList()}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { titles: state.titles };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchTitles })(TitleList);","import blogApi from '../apis/blogApi';\r\n\r\nexport const fetchPosts = (query) => async dispatch => {\r\n    const response = await blogApi.get(`/articles/${query || ''}`);\r\n\r\n    dispatch({ type: 'FETCH_POSTS', payload: response.data })\r\n};\r\n\r\n\r\nexport const fetchTitles = () => async dispatch => {\r\n    const response = await blogApi.get('/titles/');\r\n\r\n    dispatch({ type: 'FETCH_TITLES', payload: response.data })\r\n};\r\n\r\nexport const fetchPost = id => async dispatch => {\r\n    const response = await blogApi.get(`/articles/${id}/`);\r\n\r\n    dispatch({ type: 'FETCH_POST', payload: response.data })\r\n};","import './CommentCreate.css';\r\nimport React from 'react';\r\nimport blogApi from '../apis/blogApi';\r\n\r\nclass CommentCreate extends React.Component {\r\n    \r\n    state = {name:'', body:'', errors:{name:'', body:'', Nocheck_n: true, Nocheck_b: true}}\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n      \r\n        switch (name) {\r\n          case 'name': \r\n            errors.name = \r\n              value.length < 1\r\n                ? '名前を入力してください！'\r\n                : '';\r\n            errors.Nocheck_n = false\r\n            break;\r\n          case 'body': \r\n            errors.body = \r\n              value.length >= 1 && value.length <= 200\r\n                ? ''\r\n                : 'コメントは1文字以上200文字以内としてください！';\r\n            errors.Nocheck_b = false\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      \r\n        this.setState({errors, [name]: value}, ()=> {\r\n            console.log(errors)\r\n        })\r\n      }\r\n\r\n    onFormSubmit = event => {\r\n\r\n        blogApi.post(\"/comments/\", {\r\n            article: this.props.articleId,\r\n            name: this.state.name,\r\n            body: this.state.body,\r\n        },\r\n        );\r\n        this.setState({name: '', body: ''})\r\n        window.location.reload();\r\n    }\r\n\r\n    buttonPressSubmit = event => {\r\n        event.preventDefault();\r\n        const {errors} = this.state;\r\n        if (!(errors.name.length > 0 || errors.body.length > 0 || errors.Nocheck_n || errors.Nocheck_b)){\r\n            this.onFormSubmit();  \r\n        } \r\n    }\r\n\r\n    checkSubmit = () => {\r\n        const {errors} = this.state;\r\n        if (errors.name.length > 0 || errors.body.length > 0 || errors.Nocheck_n || errors.Nocheck_b){\r\n            return {opacity: 0.3}\r\n        } \r\n    }\r\n\r\n    render() {\r\n        \r\n        const {errors} = this.state;\r\n\r\n        return (\r\n            <form className=\"ui reply form\" onSubmit={this.onFormSubmit}>\r\n                <div className=\"field\">\r\n                    <label>Name</label>\r\n                    <input \r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    {errors.name.length > 0 && \r\n                    <span className='error'>{errors.name}</span>}\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Body</label>\r\n                    <textarea\r\n                        name=\"body\"\r\n                        value={this.state.body}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    {errors.body.length > 0 && \r\n                    <span className='error'>{errors.body}</span>}\r\n                    <div className=\"count\">{this.state.body.length}/200</div>\r\n                </div>\r\n                <div className=\"ui primary submit labeled icon button\" onClick={this.buttonPressSubmit} style={this.checkSubmit()} >\r\n                    <i className=\"icon edit\"></i> Add Comment\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CommentCreate;","import React from 'react';\r\nimport blogApi from '../apis/blogApi';\r\nimport CommentCreate from './CommentCreate';\r\n\r\nclass CommentBox extends React.Component {\r\n\r\n    state = { comments: [] };\r\n\r\n    getComments = async id =>{\r\n        const response = await blogApi.get(`/comments/?article_id=${id}`)\r\n\r\n        this.setState({comments: response.data})\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getComments(this.props.articleId)\r\n    }\r\n    \r\n    renderList() {\r\n        return this.state.comments.map(comment => {\r\n            return (\r\n                <div className=\"comment\" key={comment.id}>\r\n                    <div className=\"content\">\r\n                        <div className=\"author\">{comment.name}</div>\r\n                        <div className=\"text\">{comment.body}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"ui comments\">\r\n                <h3 className=\"ui dividing header\">Comments</h3>\r\n                {this.renderList()}\r\n                <CommentCreate articleId={this.props.articleId} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentBox","import React from 'react';\r\n\r\nclass SocialButton extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"ui secondary segment\">\r\n            <h3 className=\"ui dividing header\">SNS Share Buttons</h3>\r\n            <button class=\"ui twitter button\" data-tooltip=\"この記事をTwitterで共有する\" data-inverted=\"\" onClick={(e) => {window.open(\r\n                `https://twitter.com/share?url=https://thiele.work/article/${this.props.articleId}`,\"_break\")}}>\r\n            <i class=\"twitter icon\"></i>Twitter\r\n            </button>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SocialButton","import './PostList.css';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { fetchPosts } from '../actions';\r\nimport marked from 'marked';\r\nimport hljs from 'highlightjs';\r\n\r\nimport CommentBox from './CommentBox';\r\nimport SocialButton from './SocialButton';\r\n\r\nclass PostList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchPosts();\r\n        marked.setOptions({\r\n            highlight: function(code, lang) {\r\n              return hljs.highlightAuto(code, [lang]).value;\r\n            }\r\n        });\r\n    }\r\n\r\n    buttonPressNext = (event) => {\r\n        if (this.props.posts.next) {\r\n            const targeturl = this.props.posts.next;\r\n            const query = targeturl.match(/\\?page=(.*?)(&|$)/);\r\n            this.props.fetchPosts(query[0]);\r\n            window.scrollTo(0,0)\r\n        }\r\n    }\r\n\r\n    checkNext = () => {\r\n        if (!(this.props.posts.next)) {\r\n            return {opacity: 0.3, cursor:'default'}\r\n        }\r\n    }\r\n\r\n    renderList() {\r\n        if (this.props.posts.results === undefined) {\r\n            return null;\r\n        }\r\n        return this.props.posts.results.map(post => {\r\n            return (\r\n                <div className=\"ui segment\">\r\n                    <div className=\"item\" key={post.id}>\r\n                        <div className=\"content\">\r\n                            <div className=\"description\">\r\n                                <h1 className=\"ui dividing header\">{post.title}</h1>\r\n                                <div dangerouslySetInnerHTML={{__html: marked(post.body)}}></div>\r\n                                <CommentBox articleId={post.id} />\r\n                                <SocialButton articleId={post.id} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui relaxed divided list\">\r\n                {this.renderList()}\r\n                <div className=\"ui segment\">\r\n                    <div className=\"fluid ui olive labeled icon button\" onClick={this.buttonPressNext} style={this.checkNext()} >\r\n                        <i className=\"icon chevron circle right\"></i> Next Page\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { posts: state.posts };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(PostList);","import './PostList.css';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { fetchPost } from '../actions';\r\nimport marked from 'marked';\r\nimport hljs from 'highlightjs';\r\n\r\nimport CommentBox from './CommentBox';\r\nimport SocialButton from './SocialButton'\r\n\r\nclass PostDetail extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchPost(this.props.match.params.id);\r\n        marked.setOptions({\r\n            highlight: function(code, lang) {\r\n            return hljs.highlightAuto(code, [lang]).value;\r\n            }\r\n        });\r\n    }\r\n\r\n    renderList() {\r\n        const post = this.props.post;\r\n        return (\r\n            <div className=\"ui segment\">\r\n                <div className=\"item\" key={post.id}>\r\n                    <div className=\"content\">\r\n                        <div className=\"description\">\r\n                            <h1 className=\"ui dividing header\">{post.title}</h1>\r\n                            <div dangerouslySetInnerHTML={{__html: marked(post.body || '')}}></div>\r\n                            <CommentBox articleId={post.id} />\r\n                            <SocialButton articleId={post.id} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (this.props.match.params.id === \"new\"){\r\n            return null;\r\n        }\r\n\r\n        return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { post: state.post };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchPost })(PostDetail);","import _ from 'lodash';\r\nimport React from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport blogApi from '../../apis/blogApi';\r\n\r\nclass LoginNotification extends React.Component {\r\n\r\n    state = { func: function(){toast.info(\"Login required to create an article\")} }\r\n\r\n    loginCheck = () => {\r\n        const ACCESSTOKEN = localStorage.getItem('access');\r\n        if (!ACCESSTOKEN) {\r\n            this.setState({func: function(){\r\n                toast.error(\"You are not logged in\")}}) \r\n        } else {\r\n            (async () => {\r\n                const response = await blogApi.post(\"/auth/jwt/verify/\", {\r\n                    token: ACCESSTOKEN\r\n                });\r\n                if (response.status !== 200) {\r\n                    this.setState({func: function(){\r\n                        toast.warn(\"Your token has expired\")}})\r\n                } else {\r\n                    this.setState({func: function(){\r\n                        toast.success(\"You are logged in\")}})\r\n                }\r\n                \r\n            })();\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const propsDiff = _.isEqual(nextProps, this.props);\r\n        const stateDiff = _.isEqual(nextState, this.state);\r\n        return !(propsDiff && stateDiff);\r\n      }\r\n\r\n    componentDidMount(){\r\n        this.loginCheck()\r\n    }\r\n\r\n    render() {\r\n        this.addNotification = this.state.func\r\n        return (\r\n            <div>\r\n                {this.addNotification()}\r\n                <ToastContainer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginNotification;","import React from 'react';\r\nimport marked from 'marked';\r\nimport hljs from 'highlightjs';\r\nimport blogApi from '../../apis/blogApi';\r\nimport LoginNotification from '../user/LoginNotification';\r\n\r\n// const ArticleCreate = () => {\r\n//     return (\r\n//         <div></div>\r\n//     );\r\n// };\r\n\r\nclass ArticleCreate extends React.Component {\r\n    state = { title: '', markdown: '' }\r\n\r\n    onFormSubmit = event => {\r\n        const ACCESSTOKEN = localStorage.getItem('access');\r\n\r\n        blogApi.post(\"/articles/\", {\r\n            title: this.state.title,\r\n            body: this.state.markdown\r\n        },\r\n        {\r\n            headers: {\r\n                Authorization: `JWT ${ACCESSTOKEN}`,\r\n            }\r\n        });\r\n        this.setState({title: '', markdown: ''})\r\n        window.location.assign(\"../\")\r\n    }\r\n    \r\n    buttonPressSubmit = event => {\r\n        event.preventDefault();\r\n        this.onFormSubmit();\r\n    }\r\n\r\n    componentDidMount() {\r\n        marked.setOptions({\r\n            highlight: function(code, lang) {\r\n              return hljs.highlightAuto(code, [lang]).value;\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <LoginNotification />\r\n                <div className=\"ui two column stackable grid\">\r\n                    <div className=\"column\">\r\n                        <div className=\"ui segment\">\r\n                            <div className=\"ui form\">\r\n                                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                                    <div className=\"field\">\r\n                                        <label>Title</label>\r\n                                        <input \r\n                                            type=\"text\"\r\n                                            value={this.state.title}\r\n                                            onChange={(e) => this.setState({title: e.target.value})}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"field\">\r\n                                        <label>Body</label>\r\n                                        <textarea\r\n                                            value={this.state.markdown}\r\n                                            onChange={(e) => this.setState({markdown: e.target.value})}\r\n                                        />\r\n                                    </div>\r\n                                    <button className=\"fluid ui button\" onClick={this.buttonPressSubmit}>Submit</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"ui segment\">\r\n                            <div dangerouslySetInnerHTML={{__html: marked(this.state.markdown)}}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ArticleCreate;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"ui secondary pointing menu\">\r\n            <Link to=\"/\" className=\"active item\">\r\n                Thiele's blog\r\n            </Link>\r\n            <Link to=\"/articles/new\" className=\"item\">\r\n                New Post\r\n            </Link>\r\n            <div className=\"right menu\">\r\n                <Link to=\"/titles\" className=\"item\">\r\n                    Title List\r\n                </Link>\r\n                <Link to=\"/login\" className=\"item\">\r\n                    Login\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport blogApi from '../../apis/blogApi';\r\n\r\nclass Login extends React.Component {\r\n    state = {id: '', password: ''}\r\n\r\n    onFormSubmit = async event => {\r\n        const response = await blogApi.post(\"/auth/jwt/create/\", {\r\n            username: this.state.id,\r\n            password: this.state.password\r\n        });\r\n        localStorage.setItem('access', response.data.access)\r\n        this.setState({id: '', password: ''})\r\n        window.location.assign(\"../\")\r\n    }\r\n\r\n    buttonPressSubmit = event => {\r\n        event.preventDefault();\r\n        this.onFormSubmit();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"ui segment\">\r\n                <div className=\"ui form\">\r\n                    <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                        <div className=\"field\">\r\n                            <label>UserId</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                value={this.state.userid}\r\n                                onChange={(e) => this.setState({id: e.target.value})}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label>Password</label>\r\n                            <input \r\n                                type=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={(e) => this.setState({password: e.target.value})}\r\n                            />\r\n                        </div>\r\n                        <button className=\"fluid ui button\" onClick={this.buttonPressSubmit}>Submit</button>                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport TitleList from './TitleList';\r\nimport PostList from './PostList';\r\nimport PostDetail from './PostDetail';\r\nimport ArticleCreate from './articles/ArticleCreate';\r\nimport Header from './Header';\r\nimport Login from './user/Login';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={PostList} />\r\n                        <Route path=\"/titles\" exact component={TitleList} />\r\n                        <Route path=\"/login\" exact component={Login} />\r\n                        <Route path=\"/articles/new\" exact component={ArticleCreate} />\r\n                        <Route path=\"/articles/:id\" exact component={PostDetail} />\r\n                        <Route component={PostList} />\r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App","import { combineReducers } from 'redux';\r\nimport postsReducers from './postsReducer';\r\nimport titlesReducers from './titlesReducer';\r\nimport postReducers from './postReducer';\r\n\r\nexport default combineReducers({\r\n    post: postReducers,\r\n    posts: postsReducers,\r\n    titles: titlesReducers,\r\n});","export default (state=[], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POST':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export default (state=[], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POSTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export default (state=[], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_TITLES':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}