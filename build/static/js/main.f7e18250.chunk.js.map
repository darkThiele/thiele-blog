{"version":3,"sources":["apis/blogApi.js","components/PostList.js","actions/index.js","components/articles/ArticleCreate.js","components/Header.js","components/user/Login.js","components/App.js","reducers/index.js","reducers/postsReducer.js","index.js"],"names":["axios","create","baseURL","PostList","this","props","fetchPosts","marked","setOptions","highlight","code","lang","hljs","highlightAuto","value","posts","map","post","className","key","id","title","dangerouslySetInnerHTML","__html","body","renderList","React","Component","connect","state","dispatch","a","blogApi","get","response","type","payload","data","ArticleCreate","markdown","onFormSubmit","event","ACCESSTOKEN","localStorage","getItem","headers","Authorization","setState","buttonPressSubmit","preventDefault","onSubmit","onChange","e","target","class","onClick","Header","to","Login","password","username","setItem","access","userid","App","path","exact","component","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f7e18250.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://thiele.work/api/v1'\r\n    //baseURL: 'http://127.0.0.1:8000/api/v1'\r\n});","import './PostList.css';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { fetchPosts } from '../actions';\r\nimport marked from 'marked';\r\nimport hljs from 'highlightjs';\r\n\r\nclass PostList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchPosts();\r\n        marked.setOptions({\r\n            highlight: function(code, lang) {\r\n              return hljs.highlightAuto(code, [lang]).value;\r\n            }\r\n        });\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.posts.map(post => {\r\n            return (\r\n                <div className=\"ui segment\">\r\n                    <div className=\"item\" key={post.id}>\r\n                        <div className=\"content\">\r\n                            <div className=\"description\">\r\n                                <h1 className=\"ui dividing header\">{post.title}</h1>\r\n                                <div dangerouslySetInnerHTML={{__html: marked(post.body)}}></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { posts: state.posts };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(PostList);","import _ from 'lodash';\r\nimport blogApi from '../apis/blogApi';\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n    const response = await blogApi.get('/articles/');\r\n\r\n    dispatch({ type: 'FETCH_POSTS', payload: response.data })\r\n};","import React from 'react';\r\nimport marked from 'marked';\r\nimport hljs from 'highlightjs';\r\nimport blogApi from '../../apis/blogApi';\r\n\r\n// const ArticleCreate = () => {\r\n//     return (\r\n//         <div></div>\r\n//     );\r\n// };\r\n\r\nclass ArticleCreate extends React.Component {\r\n    state = { title: '', markdown: '' }\r\n\r\n    onFormSubmit = event => {\r\n        const ACCESSTOKEN = localStorage.getItem('access');\r\n\r\n        blogApi.post(\"/articles/\", {\r\n            title: this.state.title,\r\n            body: this.state.markdown\r\n        },\r\n        {\r\n            headers: {\r\n                Authorization: `JWT ${ACCESSTOKEN}`,\r\n            }\r\n        });\r\n        this.setState({title: '', markdown: ''})\r\n    }\r\n    \r\n    buttonPressSubmit = event => {\r\n        event.preventDefault();\r\n        this.onFormSubmit();\r\n    }\r\n\r\n    componentDidMount() {\r\n        marked.setOptions({\r\n            highlight: function(code, lang) {\r\n              return hljs.highlightAuto(code, [lang]).value;\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"ui segment\">\r\n                    <div className=\"ui two column very relaxed grid\">\r\n                        <div className=\"column\">\r\n                            <div className=\"ui form\">\r\n                                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                                    <div className=\"field\">\r\n                                        <label>Title</label>\r\n                                        <input \r\n                                            type=\"text\"\r\n                                            value={this.state.title}\r\n                                            onChange={(e) => this.setState({title: e.target.value})}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"field\">\r\n                                        <label>Body</label>\r\n                                        <textarea\r\n                                            value={this.state.markdown}\r\n                                            onChange={(e) => this.setState({markdown: e.target.value})}\r\n                                        />\r\n                                    </div>\r\n                                    <button class=\"fluid ui button\" onClick={this.buttonPressSubmit}>Submit</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <div dangerouslySetInnerHTML={{__html: marked(this.state.markdown)}}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ArticleCreate;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"ui secondary pointing menu\">\r\n            <Link to=\"/\" className=\"item\">\r\n                Thiele's blog\r\n            </Link>\r\n            <div className=\"right menu\">\r\n                <Link to=\"/\" className=\"item\">\r\n                    All Articles\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport blogApi from '../../apis/blogApi';\r\n\r\nclass Login extends React.Component {\r\n    state = {id: '', password: ''}\r\n\r\n    onFormSubmit = async event => {\r\n        const response = await blogApi.post(\"/auth/jwt/create/\", {\r\n            username: this.state.id,\r\n            password: this.state.password\r\n        });\r\n        localStorage.setItem('access', response.data.access)\r\n        this.setState({id: '', password: ''})\r\n    }\r\n\r\n    buttonPressSubmit = event => {\r\n        event.preventDefault();\r\n        this.onFormSubmit();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"ui segment\">\r\n                <div className=\"ui form\">\r\n                    <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                        <div className=\"field\">\r\n                            <label>UserId</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                value={this.state.userid}\r\n                                onChange={(e) => this.setState({id: e.target.value})}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label>Password</label>\r\n                            <input \r\n                                type=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={(e) => this.setState({password: e.target.value})}\r\n                            />\r\n                        </div>\r\n                        <button class=\"fluid ui button\" onClick={this.buttonPressSubmit}>Submit</button>                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport PostList from './PostList';\r\nimport ArticleCreate from './articles/ArticleCreate';\r\nimport Header from './Header';\r\nimport Login from './user/Login';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Header />\r\n                    <Route path=\"/\" exact component={PostList} />\r\n                    <Route path=\"/login\" exact component={Login} />\r\n                    <Route path=\"/articles/new\" exact component={ArticleCreate} />\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App","import { combineReducers } from 'redux';\r\nimport postsReducers from './postsReducer';\r\n\r\nexport default combineReducers({\r\n    posts: postsReducers,\r\n});","export default (state=[], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POSTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}