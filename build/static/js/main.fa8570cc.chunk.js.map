{"version":3,"sources":["apis/blogApi.js","components/PostList.js","actions/index.js","components/articles/ArticleCreate.js","components/Header.js","components/App.js","reducers/index.js","reducers/postsReducer.js","index.js"],"names":["axios","create","baseURL","PostList","this","props","fetchPosts","marked","setOptions","highlight","code","lang","hljs","highlightAuto","value","posts","map","post","className","key","id","title","dangerouslySetInnerHTML","__html","body","renderList","React","Component","connect","state","reverse","dispatch","a","blogApi","get","response","type","payload","data","ArticleCreate","Header","to","App","path","exact","component","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"sUAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,iC,kCCIPC,E,4LAEEC,KAAKC,MAAMC,aACXC,IAAOC,WAAW,CACdC,UAAW,SAASC,EAAMC,GACxB,OAAOC,IAAKC,cAAcH,EAAM,CAACC,IAAOG,W,mCAM9C,OAAOV,KAAKC,MAAMU,MAAMC,IAAI,SAAAC,GACxB,OACI,yBAAKC,UAAU,cACX,yBAAKA,UAAU,OAAOC,IAAKF,EAAKG,IAC5B,yBAAKF,UAAU,WACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,sBAAsBD,EAAKI,OACzC,yBAAKC,wBAAyB,CAACC,OAAQhB,IAAOU,EAAKO,iB,+BAU3E,OAAO,yBAAKN,UAAU,2BAA2Bd,KAAKqB,kB,GA5BvCC,IAAMC,WAoCdC,cAJS,SAACC,GACrB,MAAO,CAAEd,MAAOc,EAAMd,MAAMe,YAGQ,CAAExB,WCxChB,wDAAM,WAAMyB,GAAN,eAAAC,EAAA,qEACLC,EAAQC,IAAI,cADP,OACtBC,EADsB,OAG5BJ,EAAS,CAAEK,KAAM,cAAeC,QAASF,EAASG,OAHtB,yCAAN,wDDwCXV,CAAyCzB,GErCzCoC,EAJO,WAClB,OAAO,+CCeIC,EAfA,WACX,OACI,yBAAKtB,UAAU,8BACX,kBAAC,IAAD,CAAMuB,GAAG,IAAIvB,UAAU,QAAvB,iBAGA,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAMuB,GAAG,IAAIvB,UAAU,QAAvB,mBCUDwB,EAdH,WACR,OACI,yBAAKxB,UAAU,gBACX,kBAAC,IAAD,KACI,6BACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOyB,KAAK,IAAIC,OAAK,EAACC,UAAW1C,IACjC,kBAAC,IAAD,CAAOwC,KAAK,gBAAgBC,OAAK,EAACC,UAAWN,QCVlDO,cAAgB,CAC3B/B,MCJW,WAAuB,IAAtBc,EAAqB,uDAAf,GAAIkB,EAAW,uCACjC,OAAOA,EAAOX,MACV,IAAK,cACD,OAAOW,EAAOV,QAClB,QACI,OAAOR,MCIbmB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEJO,SAASC,cAAc,Y","file":"static/js/main.fa8570cc.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://157.230.255.40/api/v1'\r\n});","import './PostList.css';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { fetchPosts } from '../actions';\r\nimport marked from 'marked';\r\nimport hljs from 'highlightjs';\r\n\r\nclass PostList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchPosts();\r\n        marked.setOptions({\r\n            highlight: function(code, lang) {\r\n              return hljs.highlightAuto(code, [lang]).value;\r\n            }\r\n        });\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.posts.map(post => {\r\n            return (\r\n                <div className=\"ui segment\">\r\n                    <div className=\"item\" key={post.id}>\r\n                        <div className=\"content\">\r\n                            <div className=\"description\">\r\n                                <h1 className=\"ui dividing header\">{post.title}</h1>\r\n                                <div dangerouslySetInnerHTML={{__html: marked(post.body)}}></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { posts: state.posts.reverse() };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchPosts })(PostList);","import _ from 'lodash';\r\nimport blogApi from '../apis/blogApi';\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n    const response = await blogApi.get('/articles/');\r\n\r\n    dispatch({ type: 'FETCH_POSTS', payload: response.data })\r\n};","import React from 'react';\r\n\r\nconst ArticleCreate = () => {\r\n    return <div>ArticleCreate</div>;\r\n};\r\n\r\nexport default ArticleCreate;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"ui secondary pointing menu\">\r\n            <Link to=\"/\" className=\"item\">\r\n                Thiele's blog\r\n            </Link>\r\n            <div className=\"right menu\">\r\n                <Link to=\"/\" className=\"item\">\r\n                    All Articles\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport PostList from './PostList';\r\nimport ArticleCreate from './articles/ArticleCreate';\r\nimport Header from './Header';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Header />\r\n                    <Route path=\"/\" exact component={PostList} />\r\n                    <Route path=\"/articles/new\" exact component={ArticleCreate} />\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App","import { combineReducers } from 'redux';\r\nimport postsReducers from './postsReducer';\r\n\r\nexport default combineReducers({\r\n    posts: postsReducers,\r\n});","export default (state=[], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POSTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}