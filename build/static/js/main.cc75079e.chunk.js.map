{"version":3,"sources":["apis/blogApi.js","actions/index.js","components/TitleList.js","components/CommentCreate.js","components/CommentBox.js","components/SocialButton.js","components/PostList.js","components/PostDetail.js","components/articles/TagReadCreate.js","components/user/LoginNotification.js","components/articles/ArticleCreate.js","components/Header.js","components/user/Login.js","components/TagList.js","components/TagSearch.js","components/App.js","reducers/index.js","reducers/postReducer.js","reducers/postsReducer.js","reducers/titlesReducer.js","index.js"],"names":["axios","create","baseURL","fetchTitles","tag","dispatch","a","blogApi","get","response","type","payload","data","TitleList","helperUrl","id","this","props","titles","map","title","className","key","to","created_at","renderList","React","Component","withRouter","connect","state","CommentCreate","name","body","errors","Nocheck_n","Nocheck_b","handleChange","event","preventDefault","target","value","length","setState","console","log","onFormSubmit","post","article","articleId","window","location","reload","buttonPressSubmit","checkSubmit","opacity","cursor","onSubmit","onChange","onClick","style","CommentBox","comments","getComments","comment","SocialButton","class","data-tooltip","data-inverted","e","open","PostList","buttonPressNext","posts","next","query","match","fetchPosts","scrollTo","checkNext","marked","setOptions","highlight","code","lang","hljs","highlightAuto","tags","undefined","results","renderTagList","dangerouslySetInnerHTML","__html","PostDetail","fetchPost","params","TagReadCreate","tagname","selected","ACCESSTOKEN","localStorage","getItem","headers","Authorization","onSelected","includes","filter","elem","onJsonTag","getTags","labelHelper","bind","tagCreatePart","LoginNotification","func","toast","info","loginCheck","token","status","warn","success","error","nextProps","nextState","propsDiff","_","isEqual","stateDiff","addNotification","ArticleCreate","markdown","selected_tags","assign","Header","Login","password","username","setItem","access","userid","TagList","setTags","buttonPressSearch","labelCheck","tagSearchList","TagSearch","App","path","exact","component","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.cc75079e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://thiele.work/api/v1'\r\n    //baseURL: 'http://127.0.0.1:8000/api/v1'\r\n});","import blogApi from '../apis/blogApi';\r\n\r\nexport const fetchPosts = (query) => async dispatch => {\r\n    const response = await blogApi.get(`/articles/${query || ''}`);\r\n\r\n    dispatch({ type: 'FETCH_POSTS', payload: response.data })\r\n};\r\n\r\n\r\nexport const fetchTitles = (tag) => async dispatch => {\r\n    const response = await blogApi.get(`/titles/${tag || ''}`);\r\n\r\n    dispatch({ type: 'FETCH_TITLES', payload: response.data })\r\n};\r\n\r\nexport const fetchPost = id => async dispatch => {\r\n    const response = await blogApi.get(`/articles/${id}/`);\r\n\r\n    dispatch({ type: 'FETCH_POST', payload: response.data })\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport { fetchTitles } from '../actions';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nclass TitleList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchTitles();\r\n    };\r\n\r\n    helperUrl = id => {\r\n        return `/articles/${id}`;\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.titles.map(title => {\r\n            return (\r\n                <div className=\"item\" key={title.id}>\r\n                    <i className=\"large angle double right icon\"></i>\r\n                    <div className=\"content\">\r\n                        <Link to={`/articles/${title.id}`} className=\"header\">\r\n                            {title.title}\r\n                        </Link>\r\n                        <div className=\"description\">{title.created_at}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui relaxed divided list\">\r\n                {this.renderList()}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { titles: state.titles };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, { fetchTitles })(TitleList));","import './CommentCreate.css';\r\nimport React from 'react';\r\nimport blogApi from '../apis/blogApi';\r\n\r\nclass CommentCreate extends React.Component {\r\n    \r\n    state = {name:'', body:'', errors:{name:'', body:'', Nocheck_n: true, Nocheck_b: true}}\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n      \r\n        switch (name) {\r\n          case 'name': \r\n            errors.name = \r\n              value.length < 1\r\n                ? '名前を入力してください！'\r\n                : '';\r\n            errors.Nocheck_n = false\r\n            break;\r\n          case 'body': \r\n            errors.body = \r\n              value.length >= 1 && value.length <= 200\r\n                ? ''\r\n                : 'コメントは1文字以上200文字以内としてください！';\r\n            errors.Nocheck_b = false\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      \r\n        this.setState({errors, [name]: value}, ()=> {\r\n            console.log(errors)\r\n        })\r\n      }\r\n\r\n    onFormSubmit = event => {\r\n\r\n        blogApi.post(\"/comments/\", {\r\n            article: this.props.articleId,\r\n            name: this.state.name,\r\n            body: this.state.body,\r\n        },\r\n        );\r\n        this.setState({name: '', body: ''})\r\n        window.location.reload();\r\n    }\r\n\r\n    buttonPressSubmit = event => {\r\n        event.preventDefault();\r\n        const {errors} = this.state;\r\n        if (!(errors.name.length > 0 || errors.body.length > 0 || errors.Nocheck_n || errors.Nocheck_b)){\r\n            this.onFormSubmit();  \r\n        } \r\n    }\r\n\r\n    checkSubmit = () => {\r\n        const {errors} = this.state;\r\n        if (errors.name.length > 0 || errors.body.length > 0 || errors.Nocheck_n || errors.Nocheck_b){\r\n            return {opacity: 0.3, cursor: 'default'}\r\n        } \r\n    }\r\n\r\n    render() {\r\n        \r\n        const {errors} = this.state;\r\n\r\n        return (\r\n            <form className=\"ui reply form\" onSubmit={this.onFormSubmit}>\r\n                <div className=\"field\">\r\n                    <label>Name</label>\r\n                    <input \r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    {errors.name.length > 0 && \r\n                    <span className='error'>{errors.name}</span>}\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Body</label>\r\n                    <textarea\r\n                        name=\"body\"\r\n                        value={this.state.body}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    {errors.body.length > 0 && \r\n                    <span className='error'>{errors.body}</span>}\r\n                    <div className=\"count\">{this.state.body.length}/200</div>\r\n                </div>\r\n                <div className=\"ui primary submit labeled icon button\" onClick={this.buttonPressSubmit} style={this.checkSubmit()} >\r\n                    <i className=\"icon edit\"></i> Add Comment\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CommentCreate;","import React from 'react';\r\nimport blogApi from '../apis/blogApi';\r\nimport CommentCreate from './CommentCreate';\r\n\r\nclass CommentBox extends React.Component {\r\n\r\n    state = { comments: [] };\r\n\r\n    getComments = async id =>{\r\n        const response = await blogApi.get(`/comments/?article_id=${id}`)\r\n\r\n        this.setState({comments: response.data})\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getComments(this.props.articleId)\r\n    }\r\n    \r\n    renderList() {\r\n        return this.state.comments.map(comment => {\r\n            return (\r\n                <div className=\"comment\" key={comment.id}>\r\n                    <div className=\"content\">\r\n                        <div className=\"author\">{comment.name}</div>\r\n                        <div className=\"text\">{comment.body}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"ui comments\">\r\n                <h3 className=\"ui dividing header\">Comments</h3>\r\n                {this.renderList()}\r\n                <CommentCreate articleId={this.props.articleId} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentBox","import React from 'react';\r\n\r\nclass SocialButton extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"ui secondary segment\">\r\n            <h3 className=\"ui dividing header\">SNS Share Buttons</h3>\r\n            <button class=\"ui twitter button\" data-tooltip=\"この記事をTwitterで共有する\" data-inverted=\"\" onClick={(e) => {window.open(\r\n                `https://twitter.com/share?url=https://thiele.work/articles/${this.props.articleId}`,\"_break\")}}>\r\n            <i class=\"twitter icon\"></i>Twitter\r\n            </button>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SocialButton","import './PostList.css';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { fetchPosts } from '../actions';\r\nimport marked from 'marked';\r\nimport hljs from 'highlightjs';\r\n\r\nimport CommentBox from './CommentBox';\r\nimport SocialButton from './SocialButton';\r\n\r\nclass PostList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchPosts();\r\n        marked.setOptions({\r\n            highlight: function(code, lang) {\r\n              return hljs.highlightAuto(code, [lang]).value;\r\n            }\r\n        });\r\n    }\r\n\r\n    buttonPressNext = (event) => {\r\n        if (this.props.posts.next) {\r\n            const targeturl = this.props.posts.next;\r\n            const query = targeturl.match(/\\?page=(.*?)(&|$)/);\r\n            this.props.fetchPosts(query[0]);\r\n            window.scrollTo(0,0)\r\n        }\r\n    }\r\n\r\n    checkNext = () => {\r\n        if (!(this.props.posts.next)) {\r\n            return {opacity: 0.3, cursor:'default'}\r\n        }\r\n    }\r\n\r\n    renderTagList(tags) {\r\n        return tags.map(tag => {\r\n            return (\r\n                <div className=\"ui green label\" key={tag}>{tag}</div>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderList() {\r\n        if (this.props.posts.results === undefined) {\r\n            return null;\r\n        }\r\n        return this.props.posts.results.map(post => {\r\n            return (\r\n                <div className=\"ui segment\" key={post.id}>\r\n                    <div className=\"item\">\r\n                        <div className=\"content\">\r\n                            <div className=\"description\">\r\n                                <h1 className=\"ui dividing header\">{post.title}</h1>\r\n                                {this.renderTagList(post.tags)}\r\n                                <div className=\"ui divider\"></div>\r\n                                <div dangerouslySetInnerHTML={{__html: marked(post.body)}}></div>\r\n                                <CommentBox articleId={post.id} />\r\n                                <SocialButton articleId={post.id} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui relaxed divided list\">\r\n                {this.renderList()}\r\n                <div className=\"ui segment\">\r\n                    <div className=\"fluid ui olive labeled icon button\" onClick={this.buttonPressNext} style={this.checkNext()} >\r\n                        <i className=\"icon chevron circle right\"></i> Next Page\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { posts: state.posts };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, { fetchPosts })(PostList));","import './PostList.css';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { withRouter } from 'react-router'\r\nimport { fetchPost } from '../actions';\r\nimport marked from 'marked';\r\nimport hljs from 'highlightjs';\r\n\r\nimport CommentBox from './CommentBox';\r\nimport SocialButton from './SocialButton'\r\n\r\nclass PostDetail extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPost(this.props.match.params.id);\r\n        marked.setOptions({\r\n            highlight: function(code, lang) {\r\n            return hljs.highlightAuto(code, [lang]).value;\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.props.fetchPost(this.props.match.params.id);\r\n    }\r\n\r\n    renderList() {\r\n        const post = this.props.post;\r\n        return (\r\n            <div className=\"ui segment\" key={post.id}>\r\n                <div className=\"item\">\r\n                    <div className=\"content\">\r\n                        <div className=\"description\">\r\n                            <h1 className=\"ui dividing header\">{post.title}</h1>\r\n                            <div dangerouslySetInnerHTML={{__html: marked(post.body || '')}}></div>\r\n                            <CommentBox articleId={post.id} />\r\n                            <SocialButton articleId={post.id} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (this.props.match.params.id === \"new\"){\r\n            return null;\r\n        }\r\n\r\n        return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { post: state.post };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, { fetchPost })(PostDetail));","import React from 'react';\r\nimport blogApi from '../../apis/blogApi';\r\n\r\nclass TagReadCreate extends React.Component {\r\n    state = { tagname:'', tags:[], selected:[]}\r\n\r\n    onFormSubmit = event => {\r\n        const ACCESSTOKEN = localStorage.getItem('access');\r\n\r\n        blogApi.post(\"/tags/\", {\r\n            tagname: this.state.tagname,\r\n        },\r\n        {\r\n            headers: {\r\n                Authorization: `JWT ${ACCESSTOKEN}`,\r\n            }\r\n        });\r\n        this.setState({tagname:''})\r\n    }\r\n\r\n    onSelected = (tag, event) => {\r\n        if (this.state.selected.includes(tag)) {\r\n            this.setState({selected: this.state.selected.filter(elem => elem !== tag)})\r\n            this.props.onJsonTag(this.state.selected.filter(elem => elem !== tag))\r\n        } else {\r\n            this.setState({selected : [...this.state.selected, tag]})\r\n            this.props.onJsonTag([...this.state.selected, tag])\r\n        }\r\n    }\r\n\r\n    getTags = async () =>{\r\n        const response = await blogApi.get(\"/tags/\")\r\n\r\n        this.setState({tags: response.data})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTags()\r\n    }\r\n\r\n    labelHelper(tag) {\r\n        if (this.state.selected.includes(tag)) {\r\n            return \"ui green label\"\r\n        } else {\r\n            return \"ui label\"\r\n        }\r\n    }\r\n\r\n    renderList() {\r\n        return this.state.tags.map(tag => {\r\n            return (\r\n                <div className={this.labelHelper(tag.tagname)} onClick={this.onSelected.bind(null, tag.tagname)}>\r\n                    {tag.tagname}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    tagCreatePart() { \r\n        return (\r\n            <div>\r\n                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                <div className=\"field\">\r\n                    <label>New Tag</label>\r\n                    <input \r\n                        type=\"text\"\r\n                        value={this.state.tagname}\r\n                        onChange={(e) => this.setState({tagname: e.target.value})}\r\n                    />\r\n                </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"ui segment\">\r\n                <h3 className=\"header\">Tags</h3>\r\n                {this.renderList()}\r\n                <div class=\"ui divider\"></div>\r\n                {this.tagCreatePart()}\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default TagReadCreate;","import _ from 'lodash';\r\nimport React from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport blogApi from '../../apis/blogApi';\r\n\r\nclass LoginNotification extends React.Component {\r\n\r\n    state = { func: function(){toast.info(\"Login required to create an article\")} }\r\n\r\n    loginCheck = () => {\r\n        const ACCESSTOKEN = localStorage.getItem('access');\r\n        if (!ACCESSTOKEN) {\r\n            this.setState({func: function(){\r\n                toast.error(\"You are not logged in\")}}) \r\n        } else {\r\n            (async () => {\r\n                const response = await blogApi.post(\"/auth/jwt/verify/\", {\r\n                    token: ACCESSTOKEN\r\n                });\r\n                if (response.status !== 200) {\r\n                    this.setState({func: function(){\r\n                        toast.warn(\"Your token has expired\")}})\r\n                } else {\r\n                    this.setState({func: function(){\r\n                        toast.success(\"You are logged in\")}})\r\n                }\r\n                \r\n            })();\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const propsDiff = _.isEqual(nextProps, this.props);\r\n        const stateDiff = _.isEqual(nextState, this.state);\r\n        return !(propsDiff && stateDiff);\r\n      }\r\n\r\n    componentDidMount(){\r\n        this.loginCheck()\r\n    }\r\n\r\n    render() {\r\n        this.addNotification = this.state.func\r\n        return (\r\n            <div>\r\n                {this.addNotification()}\r\n                <ToastContainer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginNotification;","import React from 'react';\r\nimport marked from 'marked';\r\nimport hljs from 'highlightjs';\r\nimport TagReadCreate from './TagReadCreate';\r\nimport LoginNotification from '../user/LoginNotification';\r\nimport blogApi from '../../apis/blogApi';\r\n\r\nclass ArticleCreate extends React.Component {\r\n    state = { title: '', markdown: '', selected_tags: [] }\r\n\r\n    onJsonTag = (selected) => {\r\n        this.setState({selected_tags : selected.map(tag => tag)})\r\n    }\r\n\r\n    onFormSubmit = event => {\r\n        const ACCESSTOKEN = localStorage.getItem('access');\r\n\r\n        blogApi.post(\"/articles/\", {\r\n            title: this.state.title,\r\n            body: this.state.markdown,\r\n            tags: this.state.selected_tags,\r\n\r\n        },\r\n        {\r\n            headers: {\r\n                Authorization: `JWT ${ACCESSTOKEN}`,\r\n            }\r\n        });\r\n        this.setState({title: '', markdown: ''})\r\n        window.location.assign(\"../\")\r\n    }\r\n    \r\n    buttonPressSubmit = event => {\r\n        event.preventDefault();\r\n        this.onFormSubmit();\r\n    }\r\n\r\n    componentDidMount() {\r\n        marked.setOptions({\r\n            highlight: function(code, lang) {\r\n              return hljs.highlightAuto(code, [lang]).value;\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <LoginNotification />\r\n                <div className=\"ui two column stackable grid\">\r\n                    <div className=\"column\">\r\n                        <div className=\"ui segment\">\r\n                            <div className=\"ui form\">\r\n                                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                                    <div className=\"field\">\r\n                                        <label>Title</label>\r\n                                        <input \r\n                                            type=\"text\"\r\n                                            value={this.state.title}\r\n                                            onChange={(e) => this.setState({title: e.target.value})}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"field\">\r\n                                        <label>Body</label>\r\n                                        <textarea\r\n                                            value={this.state.markdown}\r\n                                            onChange={(e) => this.setState({markdown: e.target.value})}\r\n                                        />\r\n                                    </div>\r\n                                    <button className=\"fluid ui button\" onClick={this.buttonPressSubmit}>Submit</button>\r\n                                </form>\r\n                                <TagReadCreate onJsonTag={this.onJsonTag}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"ui segment\">\r\n                            <div dangerouslySetInnerHTML={{__html: marked(this.state.markdown)}}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ArticleCreate;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"ui secondary pointing menu\">\r\n            <Link to=\"/\" className=\"active item\">\r\n                Thiele's blog\r\n            </Link>\r\n            <Link to=\"/articles/new\" className=\"item\">\r\n                New Post\r\n            </Link>\r\n            <div className=\"right menu\">\r\n                <Link to=\"/titles\" className=\"item\">\r\n                    Title List\r\n                </Link>\r\n                <Link to=\"/login\" className=\"item\">\r\n                    Login\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport blogApi from '../../apis/blogApi';\r\n\r\nclass Login extends React.Component {\r\n    state = {id: '', password: ''}\r\n\r\n    onFormSubmit = async event => {\r\n        const response = await blogApi.post(\"/auth/jwt/create/\", {\r\n            username: this.state.id,\r\n            password: this.state.password\r\n        });\r\n        localStorage.setItem('access', response.data.access)\r\n        this.setState({id: '', password: ''})\r\n        window.location.assign(\"../\")\r\n    }\r\n\r\n    buttonPressSubmit = event => {\r\n        event.preventDefault();\r\n        this.onFormSubmit();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"ui segment\">\r\n                <div className=\"ui form\">\r\n                    <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                        <div className=\"field\">\r\n                            <label>UserId</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                value={this.state.userid}\r\n                                onChange={(e) => this.setState({id: e.target.value})}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label>Password</label>\r\n                            <input \r\n                                type=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={(e) => this.setState({password: e.target.value})}\r\n                            />\r\n                        </div>\r\n                        <button className=\"fluid ui button\" onClick={this.buttonPressSubmit}>Submit</button>                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport blogApi from '../apis/blogApi';\r\n\r\nclass TagList extends React.Component {\r\n\r\n    state = { tag : '', tags: []}\r\n    \r\n    setTags = async () =>{\r\n        const response = await blogApi.get(\"/tags/\")\r\n\r\n        this.setState({tags: response.data})\r\n    }\r\n\r\n    buttonPressSearch = (tag) => {\r\n        if (tag !== this.state.tag) {\r\n            this.setState({tag: tag})\r\n            this.props.buttonPressSearch(tag)\r\n        } else {\r\n            this.setState({tag: ''})\r\n            this.props.buttonPressSearch()\r\n        }\r\n    }\r\n\r\n    labelCheck = (tag) => {\r\n        if (tag === this.state.tag) {\r\n            return \"ui green label\"\r\n        } else {\r\n            return \"ui label\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setTags()\r\n    }\r\n\r\n    tagSearchList = () => {\r\n        return this.state.tags.map(tag => {\r\n            return (\r\n                <div className={this.labelCheck(tag.tagname)} style={{cursor:\"pointer\"}} key={tag.tagname} onClick={this.buttonPressSearch.bind(null, tag.tagname)}>\r\n                    {tag.tagname}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.tagSearchList()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TagList","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport { fetchTitles } from '../actions';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport TagList from './TagList';\r\n\r\n\r\nclass TagSearch extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchTitles();\r\n    };\r\n\r\n    buttonPressSearch = (tag, event) => {\r\n        if (tag) {\r\n            this.props.fetchTitles(`?tag=${tag}`);\r\n        } else {\r\n            this.props.fetchTitles();\r\n        }\r\n    }\r\n\r\n    helperUrl = id => {\r\n        return `/articles/${id}`;\r\n    }\r\n\r\n\r\n    renderList() {\r\n        return this.props.titles.map(title => {\r\n            return (\r\n                <div className=\"item\" key={title.id}>\r\n                    <i className=\"large angle double right icon\"></i>\r\n                    <div className=\"content\">\r\n                        <Link to={`/articles/${title.id}`} className=\"header\">\r\n                            {title.title}\r\n                        </Link>\r\n                        <div className=\"description\">{title.created_at}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui segment\">\r\n                <h1 className=\"header\">タグ絞り込み検索</h1>\r\n                <TagList buttonPressSearch={this.buttonPressSearch} />\r\n                <div className=\"ui divider\"></div>\r\n                    <div className=\"ui relaxed divided list\">\r\n                    {this.renderList()}\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { titles: state.titles };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, { fetchTitles })(TagSearch));","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport TitleList from './TitleList';\r\nimport PostList from './PostList';\r\nimport PostDetail from './PostDetail';\r\nimport ArticleCreate from './articles/ArticleCreate';\r\nimport Header from './Header';\r\nimport Login from './user/Login';\r\nimport TagSearch from './TagSearch';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"ui stackable grid\">\r\n                        <div className=\"eleven wide column\">\r\n                            <Switch>\r\n                                <Route path=\"/\" exact component={PostList} />\r\n                                <Route path=\"/titles\" exact component={TitleList} />\r\n                                <Route path=\"/login\" exact component={Login} />\r\n                                <Route path=\"/articles/new\" exact component={ArticleCreate} />\r\n                                <Route path=\"/articles/:id\" exact component={PostDetail} />\r\n                                <Route component={PostList} />\r\n                            </Switch>\r\n                        </div>\r\n                        <div className=\"five wide column\">\r\n                            <Route path=\"/\" component={TagSearch} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App","import { combineReducers } from 'redux';\r\nimport postsReducers from './postsReducer';\r\nimport titlesReducers from './titlesReducer';\r\nimport postReducers from './postReducer';\r\n\r\nexport default combineReducers({\r\n    post: postReducers,\r\n    posts: postsReducers,\r\n    titles: titlesReducers,\r\n});","export default (state=[], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POST':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export default (state=[], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POSTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export default (state=[], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_TITLES':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}